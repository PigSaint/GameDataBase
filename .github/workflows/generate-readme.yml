name: Generate README

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/generate_readme.py'
      - 'scripts/README_TEMPLATE.md'
      - 'tags.yml'

  workflow_dispatch:
  pull_request:
    types: [ opened, reopened, synchronize, edited ]
    paths:
      - 'scripts/generate_readme.py'
      - 'scripts/README_TEMPLATE.md'
      - 'tags.yml'

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone to improve speed

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: requirements.txt

      # Cache pip packages
      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Generate README
      - name: Generate README
        run: |
          python scripts/generate_readme.py

      # Commit and push changes
      - name: Commit and push changes
        if: github.event_name == 'pull_request'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Stage changes
          git add README.md
          
          # Commit changes if any
          git commit -m "docs: auto-generate README [skip ci]" || echo "No changes to commit"
          
          # Attempt to pull and rebase, resolving conflicts automatically
          git pull --rebase -X theirs origin ${{ github.head_ref }} || (
            echo "Rebase failed, conflicts detected" &&
            git diff --name-only --diff-filter=U &&  # List conflicting files
            for file in $(git diff --name-only --diff-filter=U); do
              echo "Conflict in $file:" &&
              echo "----------------------------------------" &&
              cat $file &&  # Display the content of the conflicting file
              echo "----------------------------------------";
            done &&
            git rebase --abort
          )
          
          # Push changes to the head branch
          git push origin HEAD:${{ github.head_ref }}

      - name: Add README to Summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('README.md', 'utf8');
            await core.summary
              .addHeading('Generated README')
              .addRaw(report)
              .write();

